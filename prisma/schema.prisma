generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["tracing", "multiSchema"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
	schemas  = ["tenants", "ledgers", "accounts"]
}

model tenants {
	id 				 	 String @id @default(cuid()) @db.VarChar(50)
	identifier 	 String @db.VarChar(100)
	name			 	 String @db.VarChar(100)
	country_code String @db.VarChar(2)
	country			 countries @relation(fields: [country_code], references: [code])
	timezone_id  Int @db.SmallInt
	timezone		 timezones @relation(fields: [timezone_id], references: [id])
	ledgers	  	 ledgers[]
	createdAt 	 DateTime @default(now())
  updatedAt 	 DateTime @updatedAt

	@@schema("tenants")
}

model timezones {
	id 			Int 		@id @default(autoincrement()) @db.SmallInt
	value		String  @db.VarChar(100)
	abbr		String  @db.VarChar(10)
	offset	Float		
	isdst		Boolean @db.Boolean
	text		String  @db.VarChar(100)
	utc			String[]
	tenants	tenants[]

	@@schema("tenants")
}

model ledgers {
	id				String   @id @default(cuid()) @db.VarChar(50)
	name 			String   @db.VarChar(100)
	volumeIn	Float		 @default(0.00)
	volumeOut	Float		 @default(0.00)
	tenantId	String   @db.VarChar(50)
	accounts  accounts[]
	tenant		tenants  @relation(fields: [tenantId], references: [id])
	createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

	@@schema("ledgers")
}

model configs {
	ledger	String @db.VarChar(50)
	key 		String @db.VarChar(50)
	value 	String @db.VarChar(100)

	@@unique([ledger, key])

	@@schema("ledgers")
}

model countries {
	code 			String @unique @db.VarChar(2)
	name			String @db.VarChar(100)
	comments	String @db.VarChar(150)
	tenants		tenants[]

	@@schema("tenants")
}

model accounts {
  address   String  @unique @db.VarChar
	name 		  String  @unique @db.VarChar
	volumeIn	Float		@default(0.00)
	volumeOut	Float		@default(0.00)
	active    Boolean @default(false)
	meta		  metadata[]
	ledgerId  String  @db.VarChar(50)
	ledger	  ledgers @relation(fields: [ledgerId], references: [id])
	createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

	@@schema("accounts")
}

model metadata {
	account String 	  @db.VarChar
	key 		String 	  @db.VarChar
	value 	String 	  @db.VarChar
	acc		  accounts? @relation(fields: [account], references: [name], onDelete: Cascade)

	@@unique([account, key])

	@@schema("accounts")
}