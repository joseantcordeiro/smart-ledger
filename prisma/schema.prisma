generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["tracing"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")

}

enum Status {
  ACTIVE
  SUSPEND
	BANNED
	DELETED
}

enum batchStatus {
	CREATED
	FINISHED
	PROCESSING
}

model tenants {
	id 				 	 String 	 @id @default(cuid()) @db.VarChar(50)
	identifier 	 String 	 @db.VarChar(100)
	name			 	 String 	 @db.VarChar(100)
	country_code String 	 @db.VarChar(2)
	country			 countries @relation(fields: [country_code], references: [code])
	timezoneId   Int 			 @db.SmallInt
	timezone		 timezones @relation(fields: [timezoneId], references: [id])
	ledgers	  	 ledgers[]
	createdAt 	 DateTime  @default(now())
  updatedAt 	 DateTime  @updatedAt

}

model timezones {
	id 			Int 		@id @default(autoincrement()) @db.SmallInt
	value		String  @db.VarChar(100)
	abbr		String  @db.VarChar(10)
	offset	Float		
	isdst		Boolean @db.Boolean
	text		String  @db.VarChar(100)
	utc			String[]
	tenants	tenants[]

}

model ledgers {
	id				String   @id @default(cuid()) @db.VarChar(50)
	name 			String   @db.VarChar(100)
	tenantId	String   @db.VarChar(50)
	tenant		tenants  @relation(fields: [tenantId], references: [id])
	accounts  accounts[]
	assets		assets[]
	createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

}

model configuration {
	targetId 	String 	  @db.VarChar(50)
	key 		 	String 	  @db.VarChar(50)
	value 	 	String 	  @db.VarChar(100)
	timestamp DateTime 	@default(now())

	@@unique([targetId, key])

}

model countries {
	code 			String @unique @db.VarChar(2)
	name			String @db.VarChar(100)
	comments	String @db.VarChar(150)
	tenants		tenants[]

}

model accounts {
  address   String  @unique @db.VarChar
	name 		  String  @db.VarChar(50)
	status    Status  @default(ACTIVE)
	ledgerId  String  @db.VarChar(50)
	ledger	  ledgers @relation(fields: [ledgerId], references: [id])
	timestamp DateTime @default(now())

	@@unique([name, ledgerId])

}

model metadata {
	targetId 	String 	  @db.VarChar(50)
	key 		 	String 	  @db.VarChar(50)
	value 	 	String 	  @db.VarChar(100)
	timestamp DateTime 	@default(now())

	@@unique([targetId, key])

}

model assets {
	contract  String 	 @unique @db.VarChar
	name 		  String 	 @db.VarChar(20)
	symbol 	  String 	 @db.VarChar(4)
	ownerAcc  String 	 @db.VarChar(50)
	ledgerId  String   @db.VarChar(50)
	ledger	  ledgers  @relation(fields: [ledgerId], references: [id])
	timestamp DateTime @default(now())

	@@unique([ledgerId, symbol])

}

model volumes {
	account String @db.VarChar(50)
	asset	 	String @db.VarChar(10)
	in	 		Float  @default(0.00)
	out			Float	 @default(0.00)

	@@unique([account, asset])
}

model batches {
	id				String   		@id @default(cuid()) @db.VarChar(50)
	postings  Json
	status 		batchStatus @default(CREATED)
	timestamp DateTime 		@default(now())
	ledgerId  String   		@db.VarChar(50)

}

model postings {
	id					String  @id @default(cuid()) @db.VarChar(50)
	source 			String  @db.VarChar(50)
	destination String  @db.VarChar(50)
	asset 	 		String  @db.VarChar(4)
	value 			Float
	txId 				String? @db.VarChar(50)
	ledgerId  	String  @db.VarChar(50)
}

model transactions {
	id				String    @id @default(cuid()) @db.VarChar(50)
	hash 			String    @db.VarChar
	receipt	  String 	  @db.VarChar
	timestamp DateTime 	@default(now())
	ledgerId  String   	@db.VarChar(50)
}