/**
 * This module was automatically generated by `ts-interface-builder`
 */
import * as t from "ts-interface-checker";
// tslint:disable:object-literal-key-quotes

export const ITotpCreateOptionsGenerate = t.iface([], {
  "generate": t.lit(true),
  "exported": t.opt("boolean"),
  "key_size": t.opt("number"),
  "issuer": "string",
  "account_name": "string",
  "period": t.opt("number"),
  "algorithm": t.opt("string"),
  "digits": t.opt("number"),
  "skew": t.opt("number"),
  "qr_size": t.opt("number"),
});

export const ITotpCreateOptionsNoGenerate = t.iface([], {
  "generate": t.lit(false),
  "url": t.opt("string"),
  "issuer": t.opt("string"),
  "account_name": t.opt("string"),
  "period": t.opt("number"),
  "algorithm": t.opt("string"),
  "digits": t.opt("number"),
});

export const ITotpCreateOptions = t.union("ITotpCreateOptionsGenerate", "ITotpCreateOptionsNoGenerate");

export const ITotpCreateResponseExported = t.iface([], {
  "data": t.iface([], {
    "barcode": "string",
    "url": "string",
  }),
});

export const ITotpReadResponse = t.iface([], {
  "data": t.iface([], {
    "account_name": "string",
    "algorithm": "string",
    "digits": "number",
    "issuer": "string",
    "period": "number",
  }),
});

export const ITotpListResponse = t.iface([], {
  "data": t.iface([], {
    "keys": t.array("string"),
  }),
});

export const ITotpGenerateCodeResponse = t.iface([], {
  "data": t.iface([], {
    "code": "string",
  }),
});

export const ITotpValidateCodeResponse = t.iface([], {
  "data": t.iface([], {
    "valid": "boolean",
  }),
});

const exportedTypeSuite: t.ITypeSuite = {
  ITotpCreateOptionsGenerate,
  ITotpCreateOptionsNoGenerate,
  ITotpCreateOptions,
  ITotpCreateResponseExported,
  ITotpReadResponse,
  ITotpListResponse,
  ITotpGenerateCodeResponse,
  ITotpValidateCodeResponse,
};
export default exportedTypeSuite;
